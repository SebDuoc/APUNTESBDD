-- DEMO DE OPERADORES SET Y TRANSACCIONES DML


-- OPERADORES SET
/*
UNION   PERMITE UNIR DOS CONJUNTOS PROVENIENTES DE TABLAS O CONSULTAS DISTINTAS. 
        SI HAY FILAS DUPLICADAS O QUE ESTEN PRESENTES EN AMBOS CONJUNTOS, SE MUESTRAN UNA UNICA VEZ.
        
UNION ALL   HACE LO MISMO QUE EL ANTERIOR PERO MUESTRA LAS FILAS DUPLICADAS.

INTERSECT   MUESTRA LAS FILAS COINCIDENTES O QUE ESTAN PRESENTES EN AMBOS CONJUNTOS.

MINUS   MUESTRA LAS FILAS DEL CONJUNTO 1 O a QUE NO EXISTEN EN EL CONJUNTO 2 o b.
*/
CREATE TABLE TABLA1 AS 
SELECT * 
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN ( 20, 30, 40, 50,100);

SELECT * FROM TABLA1;


CREATE TABLE TABLA2 AS 
SELECT * 
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN ( 10, 80, 90, 50);

SELECT * FROM TABLA2;


CREATE TABLE TABLA3 AS
SELECT 
        EMPLOYEE_ID ID_EMPLEADO,
        LAST_NAME || ' ' || FIRST_NAME NOMBRE,
        EMAIL CORREO,
        HIRE_DATE INGRESO,
        SALARY SUELDO
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (40, 50);

SELECT * FROM TABLA1;
SELECT * FROM TABLA2;
SELECT * FROM TABLA3;

-- USO DE LOS OPERADORES SET
-- OPERADOR UNION

SELECT employee_id, last_name || ' ' || first_name
FROM TABLA1
UNION
SELECT employee_id, last_name
FROM TABLA2
ORDER BY 2;

-- OPERADOR INTERSECT
SELECT EMPLOYEE_ID, LAST_NAME || ' ' || FIRST_NAME "NOMBRE"
FROM TABLA1
INTERSECT
SELECT EMPLOYEE_ID, LAST_NAME || ' ' || FIRST_NAME "NOMBRE"
FROM TABLA2
INTERSECT
SELECT ID_EMPLEADO, NOMBRE
FROM TABLA3;


-- OPERADOR MINUS
SELECT * 
FROM TABLA1
MINUS
SELECT * 
FROM TABLA2;


-- OPERACIONES DML
-- INSERT - UPDATE - DELETE
SELECT * 
FROM DEPARTMENTS;
SELECT MAX(DEPARTMENT_ID) FROM DEPARTMENTS;

INSERT INTO DEPARTMENTS
VALUES (280, 'Finanzas', 100, 1700);

COMMIT;



        


